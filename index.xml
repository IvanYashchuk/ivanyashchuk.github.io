<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Yashchuk</title>
    <link>https://ivanyashchuk.github.io/</link>
    <description>Recent content on Ivan Yashchuk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</managingEditor>
    <webMaster>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</webMaster>
    <lastBuildDate>Wed, 19 Jun 2019 06:23:50 +0300</lastBuildDate>
    
	<atom:link href="https://ivanyashchuk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GSoC ChainerX: CPU bindings</title>
      <link>https://ivanyashchuk.github.io/post/gsoc19-first-evaluation/</link>
      <pubDate>Wed, 19 Jun 2019 06:23:50 +0300</pubDate>
      <author>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</author>
      <guid>https://ivanyashchuk.github.io/post/gsoc19-first-evaluation/</guid>
      <description>Linear algebra routines from this issue are now working both on CPU and GPU. When it comes to the choice of linear algebra library on CPU, the variety is much broader than on GPU. However, we don&amp;rsquo;t need full featured linear algebra matrix library like Eigen, or Armadillo, as ChainerX has its own ndarray. Therefore, it was decided to use one of the LAPACK implementations. For now it seems that working with LAPACK (which is written in Fortran) directly without C wrappers is the way to go.</description>
    </item>
    
    <item>
      <title>GSoC ChainerX: First Two Weeks</title>
      <link>https://ivanyashchuk.github.io/post/gsoc19-first-two-weeks/</link>
      <pubDate>Tue, 11 Jun 2019 21:15:04 +0300</pubDate>
      <author>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</author>
      <guid>https://ivanyashchuk.github.io/post/gsoc19-first-two-weeks/</guid>
      <description>Already two weeks of coding have gone past!
My progress can be tracked in this issue. Part of the project is making LAPACK routines accesible from ChainerX performing computations in CPU and GPU. Another part is making them differentiable.
LAPACK (Linear Algebra Package) is a standard software library for numerical linear algebra. It provides routines for solving systems of linear equations and linear least squares, eigenvalue problems, and singular value decomposition.</description>
    </item>
    
    <item>
      <title>GSoC ChainerX: Linear Algebra</title>
      <link>https://ivanyashchuk.github.io/post/gsoc19-start/</link>
      <pubDate>Sun, 26 May 2019 20:13:42 +0300</pubDate>
      <author>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</author>
      <guid>https://ivanyashchuk.github.io/post/gsoc19-start/</guid>
      <description>Coding period start soon!
This summer I am going to work on extending ChainerX with some Linear Algebra routines. The goal is to implement common routines that are described at numpy.linalg. And their sensitivities for reverse mode automatic differentiation has to implemented as well!</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://ivanyashchuk.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>ivan.yashchuk@aalto.fi (Ivan Yashchuk)</author>
      <guid>https://ivanyashchuk.github.io/page/about/</guid>
      <description>My name is Ivan Yashchuk. I am a PhD student at Aalto University.
At my research I am interested in PDE-constrained Bayesian inverse problems.</description>
    </item>
    
  </channel>
</rss>