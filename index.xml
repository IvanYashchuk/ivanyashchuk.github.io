<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivan Yashchuk</title>
    <link>https://ivanyashchuk.github.io/index.xml</link>
    <description>Recent content on Ivan Yashchuk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Jun 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ivanyashchuk.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>I attended FEniCS&#39;17!</title>
      <link>https://ivanyashchuk.github.io/post/fenics-conference/</link>
      <pubDate>Sun, 18 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/fenics-conference/</guid>
      <description>&lt;p&gt;This week I was at the FEniCS Conference at University of Luxembourg. I got a chance to meet my mentors personally and other members of the FEniCS community as well.&lt;/p&gt;

&lt;p&gt;There were a lot of interesting people and a lot of interesting talks from a diverse range of scientific areas: Software and Algorithms, Magnetics, Optimisation, Biomechanics, Visualisation and Large Scale Computing, Solid and Fluid Mechanics.&lt;/p&gt;

&lt;p&gt;Thanks to my mentors Chris, Jack and Martin for inviting me there!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/O2oF4gDRXaDMk42suPJ3Gjyn_HQ_5gFrjjyU5ZSyaQojmqckH8A5AzqxpH4oZjGCJf1nuHJuxrdTjyOXbjvHjmTcOAj0uZeKsfHQUy7FyJQY6dkZA7rIOOUXtLX8v0Y2PwF31Q-ydgY8ZsxRfCjSN3YIOlRey6K_s1bDOqH1IkvXqk6ui2BX3clK7qNPrNDgk0a-KRgW50Lx5o69Z9Et49k8qkkNoM32MLiSoC9FrYvHeOFADnAe1VDvRZ6ZebQ1iaFeldXTKifcC0M6mr5geqE39fd6ce3miFuFDj_fm7K_97bBSIuYwyzN1cm4E8ySjgo9edRduzwRGkKzhfWCw2UF2CaY84iM4UUizg1nNF-tEeIh9nrAcHj7l4KQhpT2OpGwolTd7UnKUjbhY3Mcyex4DQQOLpjby_P7w0WGARW6CJStlbcYrDvzhdJ4V-j4WQs6TdyKUL_G9BlpyY3Jb-f7-Sn85O7owsJ4Gt6fCbIzA_DlXdqpdRGxZFrhpEg3MGR--c7fCtrDvE_MCIhlQtuWcxde2zqP-5ctIQaw_WjiLg43mL7HXRbKpXj0JPXCORaNqRZVTjyQqvv7fWQb4IBn3AgG3E-z3iUhDbqhojj3RzJM62_nSw=w1059-h794-no&#34;&gt;
&lt;em&gt;Guided walk through Luxembourg&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/lD2jJoEdyUOn6POwQf970uoxendhz0y7lNpS71zaMLBo130GIVZYoH3XgJIKeeNk-EjEn3hWioJvDhKbi7_jEJgegGvAa-GdOYSCj5Ooen55KV7T6bcD4eN4DbBPbT7pTOOtwESH6Nbvy5NsvYWp1gkmM2gqxjTEBHOXsyGSxhoGFwxPm-0p-7V4E9zmMo9zuRCOc4aW8uzlg25btjcKlp8LCx2XqkJ-JbQ5GdKYXDAuhGVoP7WUwEvUZqvgfuZVSuwC2mFGP-k0_khGPJAmKivmvOeDfMCf478rasY6VyiYF-0iOnE1WjSiU7pH4bsFradearC4l21sQ_8--siuteBIn7fAJiQNq4jVmhi6R4Io5Sy9LqU76WEDzoAK6ZCdS0mwygYGyw7RKmaE5OT8VmUK10AVkXuK8NmdTRdJebHwboMMaYD_tDWwvngJepx_PZKRqpIgJLdXh11gfGTmCQ-aGtTIn2yZfMBm7OGPkT0-palnKaqo7SVXkyDVKditFo4HGBXuzempmirkp73RmqoyZfav9r336bhnm9wQPH5Ym6H8WiFU8RNaUDHEQxgYcNqKz_cYmcK4LCkIxWl2blAv1AOGUnpgPxF5H50pmxLzT3pjrM-w8Q=w1059-h794-no&#34;&gt;
&lt;em&gt;Carl Lundholm from Chalmers is preparing to solve Poisson&amp;rsquo;s equation with Microsoft Hololens&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://files.slack.com/files-pri/T1AFBGYP2-F5SB52WJC/dsc_0208.jpg&#34;&gt;
&lt;em&gt;Some discussions from a parallel GSoC project about XDMF&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My project description / First nice plot!</title>
      <link>https://ivanyashchuk.github.io/post/project-description/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/project-description/</guid>
      <description>&lt;p&gt;&lt;em&gt;Coding period&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The project idea aims at being able to assemble and solve the simplest partial differential equation (PDE), a Poisson&amp;rsquo;s equation $\Delta u = f $, in 2D (quadrilateral mesh) and 3D (hexahedral mesh) in FEniCS.&lt;/p&gt;

&lt;p&gt;One of the first steps in the Finite Element Method (FEM) is splitting the domain on which the PDE is solved into small parts, called cells, which in sum make a mesh.
FEniCS has always supported meshes consisting of simplex cells (e.g. triangles and tetrahedrons), but has limited support for meshes consisting of quadrilateral (quad) and hexahedral (hex) cells.
Finite element problems solved on quad/hex meshes often have better approximation properties and better robustness to cell distortion than those solved on simplex meshes.
Example of the 2D triangular mesh of the unit square:
&lt;html&gt;  &lt;head&gt;    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html;charset=UTF-8&#34; /&gt;    &lt;meta name=&#34;generator&#34; content=&#34;FEniCS/DOLFIN (http://fenicsproject.org)&#34; /&gt;    &lt;title&gt;FEniCS/DOLFIN X3DOM plot&lt;/title&gt;    &lt;script type=&#34;text/javascript&#34; src=&#34;https://www.x3dom.org/download/x3dom.js&#34;&gt;&lt;/script&gt;    &lt;script type=&#34;text/javascript&#34; src=&#34;https://code.jquery.com/jquery-3.1.0.js&#34;&gt;&lt;/script&gt;    &lt;script type=&#34;text/javascript&#34; src=&#34;https://rawgit.com/plscott/fenics-x3dom/master/x3dom_support.js&#34;&gt;&lt;/script&gt;    &lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;https://www.x3dom.org/download/x3dom.css&#34; /&gt;    &lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;https://rawgit.com/plscott/fenics-x3dom/master/x3dom_support.css&#34; /&gt;  &lt;/head&gt;  &lt;body&gt;    &lt;x3d showStat=&#34;false&#34; xmlns=&#34;http://www.web3d.org/specifications/x3d-namespace&#34; width=&#34;500.000000px&#34; height=&#34;400.000000px&#34;&gt;      &lt;scene&gt;        &lt;shape&gt;          &lt;appearance&gt;            &lt;material diffuseColor=&#34;1.000000 1.000000 1.000000&#34; emissiveColor=&#34;0.000000 0.000000 0.000000&#34; specularColor=&#34;0.000000 0.000000 0.000000&#34; ambientIntensity=&#34;0&#34; shininess=&#34;0.5&#34; transparency=&#34;0&#34;&gt;&lt;/material&gt;          &lt;/appearance&gt;          &lt;indexedFaceSet solid=&#34;false&#34; colorPerVertex=&#34;false&#34; coordIndex=&#34;0 4 1 -1 0 4 3 -1 1 5 2 -1 1 5 4 -1 3 7 4 -1 3 7 6 -1 4 8 5 -1 4 8 7 -1 &#34;&gt;            &lt;coordinate point=&#34;0 0 0 0.5 0 0 1 0 0 0 0.5 0 0.5 0.5 0 1 0.5 0 0 1 0 0.5 1 0 1 1 0 &#34;&gt;&lt;/coordinate&gt;          &lt;/indexedFaceSet&gt;        &lt;/shape&gt;        &lt;shape&gt;          &lt;appearance&gt;            &lt;material emissiveColor=&#34;0.000000 0.000000 0.000000&#34; specularColor=&#34;0.000000 0.000000 0.000000&#34; ambientIntensity=&#34;0&#34; shininess=&#34;0.5&#34; transparency=&#34;0&#34;&gt;&lt;/material&gt;          &lt;/appearance&gt;          &lt;indexedLineSet solid=&#34;false&#34; colorPerVertex=&#34;false&#34; coordIndex=&#34;0 1 -1 0 3 -1 0 4 -1 1 2 -1 1 4 -1 1 5 -1 2 5 -1 3 4 -1 3 6 -1 3 7 -1 4 5 -1 4 7 -1 4 8 -1 5 8 -1 6 7 -1 7 8 -1 &#34;&gt;            &lt;coordinate point=&#34;0 0 0 0.5 0 0 1 0 0 0 0.5 0 0.5 0.5 0 1 0.5 0 0 1 0 0.5 1 0 1 1 0 &#34;&gt;&lt;/coordinate&gt;          &lt;/indexedLineSet&gt;        &lt;/shape&gt;        &lt;viewpoint id=&#34;default&#34; position=&#34;1.914214 1.914214 1.414214&#34; orientation=&#34;-0.7071067812 0.7071067812 0 1&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;top&#34; position=&#34;0.500000 2.500000 0.000000&#34; orientation=&#34;-1 0 0 1.5707963267948&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;bottom&#34; position=&#34;0.500000 -1.500000 0.000000&#34; orientation=&#34;1 0 0 1.5707963267948&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;left&#34; position=&#34;2.500000 0.500000 0.000000&#34; orientation=&#34;0 1 0 1.5707963267948&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;right&#34; position=&#34;-1.500000 0.500000 0.000000&#34; orientation=&#34;0 -1 0 1.5707963267948&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;back&#34; position=&#34;0.500000 0.500000 -2.000000&#34; orientation=&#34;0 1 0 3.1415926535898&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;viewpoint id=&#34;front&#34; position=&#34;0.500000 0.500000 2.000000&#34; orientation=&#34;0 0 0 1&#34; fieldOfView=&#34;0.785398&#34; centerOfRotation=&#34;0.500000 0.500000 0.000000&#34; zNear=&#34;-1&#34; zFar=&#34;-1&#34;&gt;&lt;/viewpoint&gt;        &lt;background skyColor=&#34;0.950000 0.950000 0.950000&#34;&gt;&lt;/background&gt;        &lt;directionalLight ambientIntensity=&#34;0&#34; intensity=&#34;1&#34;&gt;&lt;/directionalLight&gt;      &lt;/scene&gt;    &lt;/x3d&gt;    &lt;div id=&#34;menu&#34;&gt;&lt;form id=&#34;menu-items&#34;&gt;&lt;input type=&#34;radio&#34; id=&#34;button-options&#34; name=&#34;menu&#34; checked=&#34;&#34; /&gt;        &lt;label for=&#34;button-options&#34;&gt;Options&lt;/label&gt;        &lt;input type=&#34;radio&#34; id=&#34;button-summary&#34; name=&#34;menu&#34; /&gt;        &lt;label for=&#34;button-summary&#34; style=&#34;display: none;&#34;&gt;Summary&lt;/label&gt;        &lt;input type=&#34;radio&#34; id=&#34;button-color&#34; name=&#34;menu&#34; /&gt;        &lt;label for=&#34;button-color&#34; style=&#34;display: none;&#34;&gt;Color&lt;/label&gt;        &lt;input type=&#34;radio&#34; id=&#34;button-warp&#34; name=&#34;menu&#34; /&gt;        &lt;label for=&#34;button-warp&#34; style=&#34;display: none;&#34;&gt;Warp&lt;/label&gt;        &lt;input type=&#34;radio&#34; id=&#34;button-viewpoints&#34; name=&#34;menu&#34; /&gt;        &lt;label for=&#34;button-viewpoints&#34; style=&#34;display: none;&#34;&gt;Viewpoints&lt;/label&gt;      &lt;/form&gt;      &lt;div id=&#34;menu-content&#34;&gt;&lt;div id=&#34;content-options&#34; for=&#34;button-options&#34;&gt;&lt;span&gt;Menu Options&lt;/span&gt;          &lt;br /&gt;          &lt;form class=&#34;options&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;select-summary&#34; /&gt;            &lt;label for=&#34;select-summary&#34;&gt;Summary&lt;/label&gt;          &lt;/form&gt;          &lt;br /&gt;          &lt;form class=&#34;options&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;select-color&#34; /&gt;            &lt;label for=&#34;select-color&#34;&gt;Color&lt;/label&gt;          &lt;/form&gt;          &lt;br /&gt;          &lt;form class=&#34;options&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;select-warp&#34; /&gt;            &lt;label for=&#34;select-warp&#34;&gt;Warp&lt;/label&gt;          &lt;/form&gt;          &lt;br /&gt;          &lt;form class=&#34;options&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;select-viewpoints&#34; /&gt;            &lt;label for=&#34;select-viewpoints&#34;&gt;Viewpoints&lt;/label&gt;          &lt;/form&gt;        &lt;/div&gt;        &lt;div id=&#34;content-summary&#34; for=&#34;button-summary&#34; hidden=&#34;&#34;&gt;Number of vertices: 9&lt;br /&gt;Number of cells: 8&lt;/div&gt;        &lt;div id=&#34;content-color&#34; for=&#34;button-color&#34; hidden=&#34;&#34;&gt;&lt;form&gt;            &lt;input id=&#34;color-checkbox&#34; type=&#34;checkbox&#34; checked=&#34;&#34; /&gt;            &lt;label for=&#34;color-checkbox&#34;&gt;Show Color&lt;/label&gt;          &lt;/form&gt;Current Color Map:&lt;br /&gt;          &lt;span id=&#34;min-color-value&#34;&gt;&lt;/span&gt;          &lt;span id=&#34;color-map&#34;&gt;&lt;/span&gt;          &lt;span id=&#34;max-color-value&#34;&gt;&lt;/span&gt;        &lt;/div&gt;        &lt;div id=&#34;content-warp&#34; for=&#34;button-warp&#34; hidden=&#34;&#34;&gt;&lt;form&gt;            &lt;input id=&#34;warp-checkbox&#34; type=&#34;checkbox&#34; /&gt;            &lt;label for=&#34;warp-checkbox&#34;&gt;Warp By Scalar&lt;/label&gt;            &lt;br /&gt;            &lt;input id=&#34;warp-slider&#34; type=&#34;range&#34; min=&#34;0&#34; max=&#34;5&#34; step=&#34;0.01&#34; value=&#34;1&#34; disabled=&#34;&#34; /&gt;            &lt;br /&gt;            &lt;label id=&#34;warp-slider-val&#34; for=&#34;warp-slider&#34;&gt;1&lt;/label&gt;          &lt;/form&gt;        &lt;/div&gt;        &lt;div id=&#34;content-viewpoints&#34; for=&#34;button-viewpoints&#34; hidden=&#34;&#34;&gt;&lt;span&gt;Viewpoint Options&lt;/span&gt;          &lt;br /&gt;          &lt;button class=&#34;viewpoint&#34;&gt;front&lt;/button&gt;          &lt;button class=&#34;viewpoint&#34;&gt;back&lt;/button&gt;          &lt;button class=&#34;viewpoint&#34;&gt;left&lt;/button&gt;          &lt;br /&gt;          &lt;button class=&#34;viewpoint&#34;&gt;right&lt;/button&gt;          &lt;button class=&#34;viewpoint&#34;&gt;top&lt;/button&gt;          &lt;button class=&#34;viewpoint&#34;&gt;bottom&lt;/button&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;  &lt;/body&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;So far I have managed to get the solution of the Poisson&amp;rsquo;s equation (considering simple case $f=1$ and zero Dirichlet condition on one of the edges) on the unit square quadrilateral mesh.
Next step to accomplish is interpolating and projecting a function into the function space associated with the quadrilateral mesh.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coding period started</title>
      <link>https://ivanyashchuk.github.io/post/coding-period-started/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/coding-period-started/</guid>
      <description>&lt;p&gt;&lt;em&gt;Coding period&lt;/em&gt; has officially started on 30th of May!&lt;/p&gt;

&lt;p&gt;For the first week, my goal is to be able to solve $ \int_\Omega 1 \, d\Omega $ when $\Omega$, which is some domain in $\mathbb{R}^2$ or $\mathbb{R}^3$, consists of quadrilateral or hexahedral cells.
This simple thing of computing the area (or volume) is one of the essential part to make Finite Element Method working. It gives the ratio between the reference (local) cell (which has predefined dimensions) and the
arbitrary (global) cell.&lt;/p&gt;

&lt;p&gt;In FEniCS $ \int_\Omega 1 \, d\Omega $ corresponds to the following python code snippet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Importing FEniCS components
from fenics import *
# Creating unit square domain devided into 1 x 1 cells
mesh = UnitQuadMesh(mpi_comm_self(), 1, 1)
# Assembling the expression
assemble(1.0 * dx(mesh))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should return the area (or volume) of the domain, which is $1.0$ in case of unit square or unit cube.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Second meeting with my mentors</title>
      <link>https://ivanyashchuk.github.io/post/second-meeting/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/second-meeting/</guid>
      <description>&lt;p&gt;&lt;em&gt;Community bonding period&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Today I had another video meetings: first with Chris, then with Martin.
We have discussed with Chris importance of communication, asking questions and recording my experience through the blog.
Martin explained in details the structure of Uflacs (one of the key components in FEniCS).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First meeting with my mentors</title>
      <link>https://ivanyashchuk.github.io/post/first-meeting/</link>
      <pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/first-meeting/</guid>
      <description>&lt;p&gt;&lt;em&gt;Community bonding period&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On 9th of May I had a hangouts meeting with my mentors: Chris Richardson from Cambridge, Martin Alnæs from Oslo and Jack Hale from Luxembourg.
We introduced ourselves to each other and discussed how I managed to find this program and why I chose FEniCS to work on (because I thought it certainly going to be a great experience :) ).
There is a slack channel for FEniCS developers and we decided to have our written discussions there.&lt;/p&gt;

&lt;p&gt;Also my mentors kindly invited me to attent the FEniCS 2017 Conference which will take place in Luxembourg in June. I am very grateful!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accepted to GSoC</title>
      <link>https://ivanyashchuk.github.io/post/welcome-to-gsoc/</link>
      <pubDate>Sat, 06 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ivanyashchuk.github.io/post/welcome-to-gsoc/</guid>
      <description>&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;I was officially accepted to the Google Summer of Code 2017 program. Excited for working with FEniCS Project this summer as a GSoC student&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ru&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Really happy to announce our first ever &lt;a href=&#34;https://twitter.com/hashtag/GSOC2017?src=hash&#34;&gt;#GSOC2017&lt;/a&gt; students to work on &lt;a href=&#34;https://twitter.com/hashtag/FEniCS?src=hash&#34;&gt;#FEniCS&lt;/a&gt;: Ivan Yashchuk and Michal Habera. Thanks &lt;a href=&#34;https://twitter.com/gsoc&#34;&gt;@gsoc&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/NumFOCUS&#34;&gt;@NumFOCUS&lt;/a&gt;.&lt;/p&gt;&amp;mdash; FEniCS Project (@fenicsproject) &lt;a href=&#34;https://twitter.com/fenicsproject/status/860503927615311873&#34;&gt;5 мая 2017 г.&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>